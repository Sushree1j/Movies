/workspaces/Movies/android-client/app/src/main/java/com/example/chessassiststreamer/MainActivity.kt:536: Warning: Implicitly using the default locale is a common source of bugs: Use String.format(Locale, ...) instead [DefaultLocale]
                return String.format(
                       ^

   Explanation for issues of type "DefaultLocale":
   Calling String#toLowerCase() or #toUpperCase() without specifying an
   explicit locale is a common source of bugs. The reason for that is that
   those methods will use the current locale on the user's device, and even
   though the code appears to work correctly when you are developing the app,
   it will fail in some locales. For example, in the Turkish locale, the
   uppercase replacement for i is not I.

   If you want the methods to just perform ASCII replacement, for example to
   convert an enum name, call String#toUpperCase(Locale.ROOT) instead. If you
   really want to use the current locale, call
   String#toUpperCase(Locale.getDefault()) instead.

   https://developer.android.com/reference/java/util/Locale.html#default_locale

/workspaces/Movies/android-client/app/build.gradle:46: Warning: A newer version of androidx.core:core-ktx than 1.13.1 is available: 1.17.0 [GradleDependency]
    implementation("androidx.core:core-ktx:1.13.1")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/workspaces/Movies/android-client/app/build.gradle:47: Warning: A newer version of androidx.appcompat:appcompat than 1.6.1 is available: 1.7.1 [GradleDependency]
    implementation("androidx.appcompat:appcompat:1.6.1")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/workspaces/Movies/android-client/app/build.gradle:48: Warning: A newer version of com.google.android.material:material than 1.12.0 is available: 1.13.0 [GradleDependency]
    implementation("com.google.android.material:material:1.12.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/workspaces/Movies/android-client/app/build.gradle:49: Warning: A newer version of androidx.constraintlayout:constraintlayout than 2.1.4 is available: 2.2.1 [GradleDependency]
    implementation("androidx.constraintlayout:constraintlayout:2.1.4")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/workspaces/Movies/android-client/app/build.gradle:51: Warning: A newer version of androidx.lifecycle:lifecycle-runtime-ktx than 2.8.3 is available: 2.9.4 [GradleDependency]
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.8.3")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/workspaces/Movies/android-client/app/build.gradle:52: Warning: A newer version of androidx.lifecycle:lifecycle-livedata-ktx than 2.8.3 is available: 2.9.4 [GradleDependency]
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.8.3")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/workspaces/Movies/android-client/app/build.gradle:53: Warning: A newer version of androidx.activity:activity-ktx than 1.9.0 is available: 1.11.0 [GradleDependency]
    implementation("androidx.activity:activity-ktx:1.9.0")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/workspaces/Movies/android-client/app/build.gradle:58: Warning: A newer version of androidx.camera:camera-camera2 than 1.3.4 is available: 1.5.1 [GradleDependency]
    implementation("androidx.camera:camera-camera2:1.3.4")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/workspaces/Movies/android-client/app/build.gradle:59: Warning: A newer version of androidx.camera:camera-lifecycle than 1.3.4 is available: 1.5.1 [GradleDependency]
    implementation("androidx.camera:camera-lifecycle:1.3.4")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/workspaces/Movies/android-client/app/build.gradle:60: Warning: A newer version of androidx.camera:camera-view than 1.3.4 is available: 1.5.1 [GradleDependency]
    implementation("androidx.camera:camera-view:1.3.4")
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/workspaces/Movies/android-client/app/build.gradle:63: Warning: A newer version of androidx.test.ext:junit than 1.1.5 is available: 1.3.0 [GradleDependency]
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/workspaces/Movies/android-client/app/build.gradle:64: Warning: A newer version of androidx.test.espresso:espresso-core than 3.5.1 is available: 3.7.0 [GradleDependency]
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

/workspaces/Movies/android-client/app/src/main/res/values/themes.xml:9: Warning: Unnecessary; SDK_INT is always >= 21 [ObsoleteSdkInt]
        <item name="android:statusBarColor" tools:targetApi="l">@color/purple_700</item>
                                            ~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ObsoleteSdkInt":
   This check flags version checks that are not necessary, because the
   minSdkVersion (or surrounding known API level) is already at least as high
   as the version checked for.

   Similarly, it also looks for resources in -vNN folders, such as values-v14
   where the version qualifier is less than or equal to the minSdkVersion,
   where the contents should be merged into the best folder.

/workspaces/Movies/android-client/app/src/main/res/values/colors.xml:2: Warning: The resource R.color.purple_200 appears to be unused [UnusedResources]
    <color name="purple_200">#BB86FC</color>
           ~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

/workspaces/Movies/android-client/app/src/main/java/com/example/chessassiststreamer/MainActivity.kt:186: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
        portEditText.setText("5000")
                             ~~~~~~
/workspaces/Movies/android-client/app/src/main/java/com/example/chessassiststreamer/MainActivity.kt:186: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
        portEditText.setText("5000")
                              ~~~~
/workspaces/Movies/android-client/app/src/main/java/com/example/chessassiststreamer/MainActivity.kt:237: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
                    statusText.text = "Connecting..."
                                      ~~~~~~~~~~~~~~~
/workspaces/Movies/android-client/app/src/main/java/com/example/chessassiststreamer/MainActivity.kt:237: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
                    statusText.text = "Connecting..."
                                       ~~~~~~~~~~~~~
/workspaces/Movies/android-client/app/src/main/java/com/example/chessassiststreamer/MainActivity.kt:247: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
                    statusText.text = "Connected"
                                      ~~~~~~~~~~~
/workspaces/Movies/android-client/app/src/main/java/com/example/chessassiststreamer/MainActivity.kt:247: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
                    statusText.text = "Connected"
                                       ~~~~~~~~~
/workspaces/Movies/android-client/app/src/main/java/com/example/chessassiststreamer/MainActivity.kt:373: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
                statusText.text = "Streaming ${fpsFormat.format(fps)} FPS"
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/workspaces/Movies/android-client/app/src/main/java/com/example/chessassiststreamer/MainActivity.kt:373: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
                statusText.text = "Streaming ${fpsFormat.format(fps)} FPS"
                                   ~~~~~~~~~~
/workspaces/Movies/android-client/app/src/main/java/com/example/chessassiststreamer/MainActivity.kt:373: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
                statusText.text = "Streaming ${fpsFormat.format(fps)} FPS"
                                                                     ~~~~
/workspaces/Movies/android-client/app/src/main/java/com/example/chessassiststreamer/MainActivity.kt:414: Warning: Do not concatenate text displayed with setText. Use resource string with placeholders. [SetTextI18n]
            statusText.text = "Idle"
                              ~~~~~~
/workspaces/Movies/android-client/app/src/main/java/com/example/chessassiststreamer/MainActivity.kt:414: Warning: String literal in setText can not be translated. Use Android resources instead. [SetTextI18n]
            statusText.text = "Idle"
                               ~~~~

   Explanation for issues of type "SetTextI18n":
   When calling TextView#setText
   * Never call Number#toString() to format numbers; it will not handle
   fraction separators and locale-specific digits properly. Consider using
   String#format with proper format specifications (%d or %f) instead.
   * Do not pass a string literal (e.g. "Hello") to display text. Hardcoded
   text can not be properly translated to other languages. Consider using
   Android resource strings instead.
   * Do not build messages by concatenating text chunks. Such messages can not
   be properly translated.

   https://developer.android.com/guide/topics/resources/localization.html

/workspaces/Movies/android-client/app/src/main/res/layout/activity_main.xml:136: Warning: Hardcoded string "Idle", should use @string resource [HardcodedText]
            android:text="Idle"
            ~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

0 errors, 27 warnings
